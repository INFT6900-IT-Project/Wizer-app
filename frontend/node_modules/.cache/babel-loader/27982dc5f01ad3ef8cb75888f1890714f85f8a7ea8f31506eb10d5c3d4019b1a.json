{"ast":null,"code":"import axios from \"axios\";\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\nconst REQUEST_TIMEOUT = 30000;\nconst axiosInstance = axios.create({\n  headers: {\n    \"Content-Type\": \"application/json\"\n  },\n  timeout: REQUEST_TIMEOUT\n});\naxiosInstance.interceptors.request.use(config => {\n  return config;\n}, error => Promise.reject(error));\naxiosInstance.interceptors.response.use(response => response, error => {\n  // Handle errors globally here, e.g., log out user on 401, show messages, etc.\n  return Promise.reject(error);\n});\nconst formatRequestParams = params => {\n  if (params === null) return params;\n  const {\n    page,\n    limit,\n    order,\n    sort,\n    ...otherParams\n  } = params;\n  return {\n    _page: page,\n    _limit: limit,\n    _order: order,\n    _sort: sort,\n    ...Object.keys(otherParams).filter(key => otherParams[key] !== null && otherParams[key] !== undefined && otherParams[key] !== \"\").reduce((obj, key) => {\n      obj[key] = otherParams[key];\n      return obj;\n    }, {})\n  };\n};\nconst baseRequest = async (url, method, data, configs) => {\n  try {\n    const newConfigs = {\n      ...configs,\n      url: API_BASE_URL + url,\n      method\n    };\n    if (method === \"GET\") {\n      newConfigs.params = formatRequestParams(data);\n    } else {\n      newConfigs.data = data;\n    }\n    const res = await axiosInstance.request(newConfigs);\n    return [res.data.data || res.data, undefined];\n  } catch (error) {\n    const err = error;\n    const requestError = {};\n    if (err.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n\n      const responseData = err.response.data;\n      requestError.message = responseData.detail;\n      requestError.code = String(err.response.status);\n      requestError.errors = responseData.errors;\n    } else if (err.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      requestError.message = err.detail;\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      requestError.message = err.detail;\n    }\n    return [undefined, requestError];\n  }\n};\nexport default baseRequest;","map":{"version":3,"names":["axios","API_BASE_URL","REQUEST_TIMEOUT","axiosInstance","create","headers","timeout","interceptors","request","use","config","error","Promise","reject","response","formatRequestParams","params","page","limit","order","sort","otherParams","_page","_limit","_order","_sort","Object","keys","filter","key","undefined","reduce","obj","baseRequest","url","method","data","configs","newConfigs","res","err","requestError","responseData","message","detail","code","String","status","errors"],"sources":["C:/Users/BAO NGOC/OneDrive/Documents/GitHub/Wizer-app/src/api/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_BASE_URL = \"http://127.0.0.1:8000\";\r\nconst REQUEST_TIMEOUT = 30000;\r\n\r\nconst axiosInstance = axios.create({\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n  timeout: REQUEST_TIMEOUT,\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    // Handle errors globally here, e.g., log out user on 401, show messages, etc.\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst formatRequestParams = (params) => {\r\n  if (params === null) return params;\r\n  const { page, limit, order, sort, ...otherParams } = params;\r\n  return {\r\n    _page: page,\r\n    _limit: limit,\r\n    _order: order,\r\n    _sort: sort,\r\n    ...Object.keys(otherParams)\r\n      .filter(\r\n        (key) =>\r\n          otherParams[key] !== null &&\r\n          otherParams[key] !== undefined &&\r\n          otherParams[key] !== \"\"\r\n      )\r\n      .reduce((obj, key) => {\r\n        obj[key] = otherParams[key];\r\n        return obj;\r\n      }, {}),\r\n  };\r\n};\r\n\r\nconst baseRequest = async (url, method, data, configs) => {\r\n  try {\r\n    const newConfigs = {\r\n      ...configs,\r\n      url: API_BASE_URL + url,\r\n      method,\r\n    };\r\n\r\n    if (method === \"GET\") {\r\n      newConfigs.params = formatRequestParams(data);\r\n    } else {\r\n      newConfigs.data = data;\r\n    }\r\n\r\n    const res = await axiosInstance.request(newConfigs);\r\n    return [res.data.data || res.data, undefined];\r\n  } catch (error) {\r\n    const err = error;\r\n    const requestError = {};\r\n\r\n    if (err.response) {\r\n      // The request was made and the server responded with a status code\r\n      // that falls out of the range of 2xx\r\n\r\n      const responseData = err.response.data;\r\n      requestError.message = responseData.detail;\r\n      requestError.code = String(err.response.status);\r\n      requestError.errors = responseData.errors;\r\n    } else if (err.request) {\r\n      // The request was made but no response was received\r\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\r\n      // http.ClientRequest in node.js\r\n      requestError.message = err.detail;\r\n    } else {\r\n      // Something happened in setting up the request that triggered an Error\r\n      requestError.message = err.detail;\r\n    }\r\n\r\n    return [undefined, requestError];\r\n  }\r\n};\r\n\r\nexport default baseRequest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}